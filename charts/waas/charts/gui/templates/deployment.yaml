{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waas-gui-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "waas.labels" . | indent 4 }}
  annotations:
    {{- include "waas.annotations" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      configid: waas-gui-container
  template:
    metadata:
      labels:
        configid: waas-gui-container
        {{- include "waas.labels" . | indent 8}}
      annotations:
        {{- include "waas.annotations" . | indent 8}}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: gui
          image: {{ include "waas.image.registry" . | coalesce .Values.containers.gui.registry }}/waas-gui{{ include "waas.image.version" . | coalesce .Values.containers.gui.version }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            - name: PORT
              value: "{{ .Values.global.gui.serviceTargetPort | default 8080 }}"
            - name: EVENTS_SERVICE
              value: "waas-events-fetcher.{{ .Release.Namespace }}.svc:{{ .Values.global.eventFetcher.servicePort | default 443 }}"
            - name: IDENTITY_SERVICE
              {{- if .Values.global.ipv6Support }}
              value: "[{{ .Values.identityServiceHostIPv6 }}]:{{ .Values.identityServicePort }}"
              {{- else }}
              value: {{ .Values.identityServiceHostIPv4 }}:{{ .Values.identityServicePort }}
              {{- end }}
            {{/* Profiles-Crud Env Vars */}}
            {{- include "waas.profile-crud-client.env" . | nindent 8 | trim }}
            - name: AUTH_METHOD
              valueFrom:
                configMapKeyRef:
                  name: waas-identity-auth-config
                  key: AUTH_METHOD
        {{- /* TLS settings for gui service */}}
        {{- with .Values.tls.server }}
            - name: SERVER_TLS_ENABLED
              value: {{ .enabled | quote }}
          {{- if eq .enabled true }}
            - name: SERVER_TLS_CERT_FILE
              value: {{ .certificate | quote }}
            - name: SERVER_TLS_KEY_FILE
              value: {{ .key | quote }}
          {{- end }}
        {{- end }}
        {{- with .Values.tls.clients.eventsFetcher }}
            - name: EF_CLIENT_TLS_ENABLED
              value: {{ .enabled | quote }}
            - name: EF_CLIENT_TLS_CLIENT_AUTH
              value: {{ .clientAuth | quote }}
            - name: EF_CLIENT_TLS_VERIFY
              value: {{ .verify | quote }}
          {{- if eq .enabled true }}
            {{- if eq .clientAuth true }}
            - name: EF_CLIENT_TLS_CERT_FILE
              value: {{ .clientCertificate | quote }}
            - name: EF_CLIENT_TLS_KEY_FILE
              value: {{ .clientKey | quote }}
            {{- end }}
            {{- if eq .verify true }}
            - name: EF_CLIENT_TLS_CA_FILE
              value: {{ .ca | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
            - name: ADMIN_EMAIL
              value: {{ .Values.global.guiAdminEmail | quote }}
          resources:
            {{- toYaml .Values.containers.gui.resources | nindent 12 }}
          {{- with .Values.containers.gui.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: conf-volume
              mountPath: /etc/nginx/conf.d
            - name: tmp-volume
              mountPath: /tmp
            {{/* Profiles-Crud volume mounts */}}
            {{- include "waas.profile-crud-client.mounts" . | nindent 12 | trim}}
        {{- /* gui server TLS mounts */}}
        {{- with .Values.tls.server }}
          {{- if eq .enabled true -}}
            {{- with .mounts}}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end}}
        {{- end }}
        {{- /* events-fetcher client TLS mounts */}}
        {{- with .Values.tls.clients.eventsFetcher }}
          {{- if eq .enabled true -}}
            {{- with .mounts}}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        {{- end }}
          readinessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /
              port: {{ .Values.global.gui.serviceTargetPort | default 8080 }}
          {{- /* gui server TLS settings */}}
          {{- with .Values.tls.server }}
            {{- if eq .enabled true }}
              scheme: HTTPS
            {{- else }}
              scheme: HTTP
            {{- end}}
          {{- end }}
          livenessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /
              port: {{ .Values.global.gui.serviceTargetPort | default 8080 }}
            {{- /* gui server TLS settings */}}
          {{- with .Values.tls.server }}
            {{- if eq .enabled true }}
              scheme: HTTPS
            {{- else }}
              scheme: HTTP
            {{- end}}
          {{- end }}
        - name: identity
          image: {{ include "waas.image.registry" . | coalesce .Values.containers.gui.registry }}/waas-identity{{ include "waas.image.version" . | coalesce .Values.containers.identity.version }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            - name: PORT
              value: {{ .Values.identityServicePort | quote }}
            - name: USERS_FOLDER
              value: /tmp/users
            - name: KEYS_FOLDER
              value: /tmp/keys
            - name: AUTH_ACCESS_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  name: waas-identity-auth-config
                  key: AUTH_ACCESS_EXPIRATION
            - name: AUTH_METHOD
              valueFrom:
                configMapKeyRef:
                  name: waas-identity-auth-config
                  key: AUTH_METHOD
              {{- if .Values.global.ipv6Support }}
            - name: KUBERNETES_SERVICE_HOST
              value: kubernetes.default.svc
              {{- end }}
            {{ include "waas.profile-crud-client.env" . | nindent 8 | trim }}
          livenessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            exec:
              command:
              - /bin/sh
              - -c
              - node main/health_check.js > /dev/null 2>&1
          readinessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            exec:
              command:
              - /bin/sh
              - -c
              - node main/health_check.js > /dev/null 2>&1
          resources:
            {{- toYaml .Values.containers.identity.resources | nindent 12 }}
          {{- with .Values.containers.identity.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            {{/* Profiles-Crud volume mounts */}}
            {{- include "waas.profile-crud-client.mounts" . | nindent 12 | trim}}
      {{- if .Values.global.image.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.imagePullSecret }}
      {{- end }}
      initContainers:
        - name: init-create-auth-users
          image: {{ include "waas.image.registry" . | coalesce .Values.containers.initCreateAuthUsers.registry }}/waas-kubectl{{ include "waas.image.version" . | coalesce .Values.containers.initCreateAuthUsers.version }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            - name: USERS_FOLDER
              value: /tmp/users
            - name: KEYS_FOLDER
              value: /tmp/keys
            - name: GUI_USER
              valueFrom:
                secretKeyRef:
                  name: waas-gui-users-secret
                  key: user
            - name: GUI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: waas-gui-users-secret
                  key: password
            - name: GUI_AUTH_PASSPHRASE
              value: {{ randAlphaNum 10 | quote }}
          resources:
            {{- toYaml .Values.containers.initCreateAuthUsers.resources | nindent 12 }}
          {{- with .Values.containers.initCreateAuthUsers.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
          command: ["/bin/bash"]
          args:
            - "-c"
            - |-
{{ .Files.Get "files/auth-users.sh" | indent 14 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: conf-volume
          emptyDir:
            {{- toYaml .Values.volumeCfg | nindent 12 }}
        - name: tmp-volume
          emptyDir:
            {{- toYaml .Values.volumeTmp | nindent 12 }}
        {{/* Profiles-Crud volumes */}}
        {{- include "waas.profile-crud-client.volumes" . | nindent 8 | trim }}
  {{- /* gui server TLS volumes */}}
    {{- with .Values.tls.server }}
      {{- if eq .enabled true -}}
        {{- with .volumes}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- /* events-fetcher client TLS volumes */}}
    {{- with .Values.tls.clients.eventsFetcher }}
      {{- if eq .enabled true -}}
        {{- with .volumes}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    {{- end }}
{{- end }}